{"ast":null,"code":"var _jsxFileName = \"D:\\\\woooork\\\\required5projects\\\\Tenzies app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\"; // For generating unique IDs\nimport Confetti from \"react-confetti\"; // For showing confetti effect when game is won\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // State to hold all dice\n  const [dice, setDice] = useState(generateAllNewDice());\n\n  // Ref for focusing the button after winning\n  const buttonRef = useRef(null);\n\n  // Check if all dice are held and have the same value (game won condition)\n  const gameWon = dice.every(die => die.isHeld) && dice.every(die => die.value === dice[0].value);\n\n  // When the game is won, focus the button\n  useEffect(() => {\n    if (gameWon) {\n      buttonRef.current.focus();\n    }\n  }, [gameWon]);\n  function generateAllNewDice() {\n    return new Array(10).fill(0).map(() => ({\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    }));\n  }\n  function rollDice() {\n    if (!gameWon) {\n      setDice(oldDice => oldDice.map(die => die.isHeld ? die : {\n        ...die,\n        value: Math.ceil(Math.random() * 6)\n      }));\n    } else {\n      setDice(generateAllNewDice());\n    }\n  }\n\n  //\n  function hold(id) {\n    setDice(oldDice => oldDice.map(die => die.id === id ? {\n      ...die,\n      isHeld: !die.isHeld\n    } : die));\n  }\n  const diceElements = dice.map(dieObj => /*#__PURE__*/_jsxDEV(Die, {\n    value: dieObj.value,\n    isHeld: dieObj.isHeld,\n    hold: hold,\n    id: dieObj.id\n  }, dieObj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [gameWon && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-live\": \"polite\",\n        className: \"sr-only\",\n        children: gameWon && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Congratulations! You won! Press \\\"New Game\\\" to start again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Tenzies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-container\",\n        children: diceElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: buttonRef,\n        className: \"roll-dice\",\n        onClick: rollDice,\n        children: gameWon ? \"New Game\" : \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"FlJ7eG5esbl0VUp0j3YbaPHSVWk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","Die","nanoid","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dice","setDice","generateAllNewDice","buttonRef","gameWon","every","die","isHeld","value","current","focus","Array","fill","map","Math","ceil","random","id","rollDice","oldDice","hold","diceElements","dieObj","fileName","_jsxFileName","lineNumber","columnNumber","children","className","ref","onClick","_c","$RefreshReg$"],"sources":["D:/woooork/required5projects/Tenzies app/src/App.jsx"],"sourcesContent":["import { useState , useRef, useEffect} from \"react\";\r\nimport Die from \"./components/Die\";\r\nimport { nanoid } from \"nanoid\"; // For generating unique IDs\r\nimport Confetti from \"react-confetti\";// For showing confetti effect when game is won\r\n\r\n\r\nexport default function App() {\r\n    // State to hold all dice\r\n    const [dice, setDice] = useState(generateAllNewDice())\r\n\r\n    // Ref for focusing the button after winning\r\n    const buttonRef = useRef(null)\r\n\r\n    // Check if all dice are held and have the same value (game won condition)\r\n    const gameWon = dice.every(die => die.isHeld) &&\r\n        dice.every(die => die.value === dice[0].value)\r\n      \r\n    // When the game is won, focus the button\r\n    useEffect(() => {\r\n        if (gameWon) {\r\n            buttonRef.current.focus()\r\n        }\r\n    }, [gameWon])\r\n\r\n    function generateAllNewDice(){\r\n        return new Array(10)\r\n            .fill(0)\r\n            .map(() => ({value: Math.ceil(Math.random() * 6), isHeld: false , id: nanoid()}))\r\n    }\r\n    \r\n    function rollDice() {\r\n        if (!gameWon) {\r\n            setDice(oldDice => oldDice.map(die =>\r\n                die.isHeld ?\r\n                    die :\r\n                    { ...die, value: Math.ceil(Math.random() * 6) }\r\n            ))\r\n        } else {\r\n            setDice(generateAllNewDice())\r\n        }\r\n    }\r\n\r\n    //\r\n    function hold (id) {\r\n        setDice(oldDice => oldDice.map(die =>\r\n            die.id === id ?\r\n                { ...die, isHeld: !die.isHeld } :\r\n                die\r\n        ))\r\n    }\r\n\r\n    const diceElements = dice.map(dieObj => <Die key={dieObj.id} \r\n                                                 value={dieObj.value} \r\n                                                 isHeld={dieObj.isHeld} \r\n                                                 hold={hold}\r\n                                                 id={dieObj.id} />)\r\n\r\n    return(\r\n        <>\r\n            <main>\r\n                {gameWon && <Confetti />}\r\n                <div aria-live=\"polite\" className=\"sr-only\">\r\n                    {gameWon && <p>Congratulations! You won! Press \"New Game\" to start again.</p>}\r\n                </div>\r\n                <h1 className=\"title\">Tenzies</h1>\r\n                <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n                    \r\n                <div className=\"dice-container\">\r\n                    {diceElements}\r\n                </div>\r\n                <button ref={buttonRef} className=\"roll-dice\" onClick={rollDice}>\r\n                  {gameWon ? \"New Game\" : \"Roll\"}\r\n                </button>\r\n            </main>\r\n        </> \r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}