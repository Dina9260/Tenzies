{"ast":null,"code":"var _jsxFileName = \"D:\\\\woooork\\\\required5projects\\\\Meme Generator app\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: \"One does not simply\",\n    bottomText: \"Walk into Mordor\",\n    imageUrl: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Top text\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"One does not simply\",\n          name: \"topText\",\n          value: meme.topText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Bottom text\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Walk into Mordor\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"RHyQUze4nZ0ClEqMe1rIu1YYCLM=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Main","_s","meme","setMeme","topText","bottomText","imageUrl","allMemes","setAllMemes","fetch","then","res","json","data","memes","handleChange","event","name","value","currentTarget","prevMeme","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["D:/woooork/required5projects/Meme Generator app/src/components/Main.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function Main (){\r\n    const [meme, setMeme] = useState({\r\n        topText: \"One does not simply\",\r\n        bottomText: \"Walk into Mordor\",\r\n        imageUrl: \"http://i.imgflip.com/1bij.jpg\"\r\n    })\r\n    const [allMemes, setAllMemes] = useState ([])\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(res => res.json())\r\n        .then(data => setAllMemes(data.data.memes))\r\n    },[])\r\n\r\n    function handleChange(event){\r\n        const { name, value } = event.currentTarget\r\n        setMeme(prevMeme => ({...prevMeme,[name]: value}))\r\n    }\r\n    return(\r\n        <main>\r\n            <div className=\"form\">\r\n                <label>Top text\r\n                    <input type=\"text\" \r\n                        placeholder=\"One does not simply\"\r\n                        name=\"topText\"\r\n                        value={meme.topText}\r\n                        onChange={handleChange}/>\r\n                </label>\r\n                <label>Bottom text\r\n                    <input type=\"text\" \r\n                        placeholder=\"Walk into Mordor\"\r\n                        name=\"bottomText\"\r\n                        value={meme.bottomText}\r\n                        onChange={handleChange}/>\r\n                </label> \r\n                <button>Get a new meme image</button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <img src={meme.imageUrl} />\r\n                <span className=\"top\">{meme.topText}</span>\r\n                <span className=\"bottom\">{meme.bottomText}</span>\r\n            </div>\r\n        </main>\r\n            )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}