{"ast":null,"code":"var _jsxFileName = \"D:\\\\woooork\\\\required5projects\\\\Tenzies app\\\\src\\\\components\\\\Die.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Die component represents a single die in the game\nexport default function Die(props) {\n  const styles = {\n    // Dynamic style based on whether the die is held or not\n    backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: styles // Button background changes when held\n    ,\n    onClick: () => props.hold(props.id) // Calls the hold function with die ID\n    ,\n    \"aria-pressed\": props.isHeld // Accessibility: Indicates the button is active or not\n    ,\n    \"aria-label\": `Die with value ${props.value}, ${props.isHeld ? \"held\" : \"not held\"}` // Accessibility label for screen readers\n    ,\n    children: [props.value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Die;\nvar _c;\n$RefreshReg$(_c, \"Die\");","map":{"version":3,"names":["Die","props","styles","backgroundColor","isHeld","_jsxDEV","style","onClick","hold","id","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/woooork/required5projects/Tenzies app/src/components/Die.jsx"],"sourcesContent":["// Die component represents a single die in the game\r\nexport default function Die(props){\r\n    const styles = {\r\n        // Dynamic style based on whether the die is held or not\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\r\n    }\r\n    return(\r\n        <button \r\n            style={styles}// Button background changes when held\r\n            onClick={() => props.hold(props.id)} // Calls the hold function with die ID\r\n            aria-pressed={props.isHeld} // Accessibility: Indicates the button is active or not\r\n            aria-label={`Die with value ${props.value}, ${props.isHeld ? \"held\" : \"not held\"}`}  // Accessibility label for screen readers\r\n            >{props.value} {/* Displays the value of the die */}</button>\r\n    )\r\n}"],"mappings":";;AAAA;AACA,eAAe,SAASA,GAAGA,CAACC,KAAK,EAAC;EAC9B,MAAMC,MAAM,GAAG;IACX;IACAC,eAAe,EAAEF,KAAK,CAACG,MAAM,GAAG,SAAS,GAAG;EAChD,CAAC;EACD,oBACIC,OAAA;IACIC,KAAK,EAAEJ,MAAO;IAAA;IACdK,OAAO,EAAEA,CAAA,KAAMN,KAAK,CAACO,IAAI,CAACP,KAAK,CAACQ,EAAE,CAAE,CAAC;IAAA;IACrC,gBAAcR,KAAK,CAACG,MAAO,CAAC;IAAA;IAC5B,cAAY,kBAAkBH,KAAK,CAACS,KAAK,KAAKT,KAAK,CAACG,MAAM,GAAG,MAAM,GAAG,UAAU,EAAG,CAAE;IAAA;IAAAO,QAAA,GACnFV,KAAK,CAACS,KAAK,EAAC,GAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA6C,CAAC;AAEzE;AAACC,EAAA,GAbuBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}